[{"/home/radek/Pulpit/Node-main/08 - server/client/src/reportWebVitals.js":"1","/home/radek/Pulpit/Node-main/08 - server/client/src/UserPanel.js":"2","/home/radek/Pulpit/Node-main/08 - server/client/src/Home.js":"3","/home/radek/Pulpit/Node-main/08 - server/client/src/Fetch.js":"4","/home/radek/Pulpit/Node-main/08 - server/client/src/Github.js":"5","/home/radek/Pulpit/Node-main/08 - server/client/src/index.js":"6","/home/radek/Pulpit/Node-main/08 - server/client/src/history.js":"7","/home/radek/Pulpit/Node-main/08 - server/client/src/App.js":"8","/home/radek/Pulpit/Node-main/08 - server/client/src/fetchData.js":"9"},{"size":362,"mtime":1609672086000,"results":"10","hashOfConfig":"11"},{"size":6988,"mtime":1609838037934,"results":"12","hashOfConfig":"11"},{"size":1707,"mtime":1609672086000,"results":"13","hashOfConfig":"11"},{"size":3592,"mtime":1609753178095,"results":"14","hashOfConfig":"11"},{"size":543,"mtime":1609672086000,"results":"15","hashOfConfig":"11"},{"size":500,"mtime":1609672086000,"results":"16","hashOfConfig":"11"},{"size":86,"mtime":1609742930198,"results":"17","hashOfConfig":"11"},{"size":1297,"mtime":1609744963823,"results":"18","hashOfConfig":"11"},{"size":0,"mtime":1609743781638,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t4f4xg",{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/radek/Pulpit/Node-main/08 - server/client/src/reportWebVitals.js",[],"/home/radek/Pulpit/Node-main/08 - server/client/src/UserPanel.js",["40","41","42","43","44","45","46","47","48"],"/home/radek/Pulpit/Node-main/08 - server/client/src/Home.js",[],"/home/radek/Pulpit/Node-main/08 - server/client/src/Fetch.js",["49","50","51"],"import React from \"react\";\nimport styled from \"styled-components\";\n//import { useHistory } from \"react-router-dom\";\nimport  UserPanel  from \"./UserPanel\";\nimport history from './history';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst TableContainer = styled.div`\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 600px;\n  max-width: 1200px;\n  width: auto;\n`;\n\nconst StyledTr = styled.tr`\n  background-color: #009879;\n  color: #ffffff;\n  text-align: left;\n\n  td,\n  th {\n    padding: 12px 15px;\n    text-align: left;\n    margin-left: 1px solid #009811;\n    margin-right: 1px solid yellow;\n  }\n`;\n\nconst StyledButton = styled.button`\n  padding: 1rem 2rem 1rem 2rem;\n  border: none;\n  background-color: #6c7ae0;\n  color: white;\n  margin: auto;\n\n  :hover {\n    border-radius: 5px;\n    background-color: green;\n    border: none;\n    text-decoration: underline;\n  }\n`;\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  margin: 25px 0;\n  font-size: 1.5em;\n  font-family: sans-serif;\n\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\n\n  thead tr {\n    background-color: #36304a;\n    color: white;\n    padding: 15px;\n  }\n  thead tr th:nth-child(0) {\n    border-top-left-radius: 12px;\n    padding: 12px;\n  }\n  thead tr th:last-child {\n    border-top-right-radius: 12px;\n    padding: 12px;\n  }\n\n  ${StyledTr} {\n    background-color: white;\n    color: gray;\n  }\n\n  ${StyledTr}:nth-of-type(even) {\n    background-color: #f8f6ff;\n    color: gray;\n  }\n`;\n\nexport const Fetch = () => {\n\n  const [content, setContent] = React.useState([]);\n  React.useEffect(() => {\n    fetchData().then((response) => {\n      response.json().then((json) => {\n        console.log(json);\n        setContent(json);\n      });\n    });\n    // setContent(data)});\n  }, []);\n  return (\n    <>\n      <TableContainer>\n        <StyledTable>\n          <thead>\n            <tr>\n              <th>Nr.</th>\n              <th>Sys.ID</th>\n              <th>Username</th>\n              <th>E-mail</th>\n              <th>Password</th>\n              <th>Akcja</th>\n            </tr>\n          </thead>\n          <tbody>\n            {content.map((element, index) => (\n              <StyledTr key={index}>\n                <td>{index}</td>\n                <td>{element.id}</td>\n                <td>{element.username}</td>\n                <td>{element.email}</td>\n                <td>{element.password}</td>\n                <td>\n                \n                  <Route path={`/user/${element.username}/${element.id}`}\n                  component={UserPanel}/>\n                {/* <Route\n                    exact path={`/user/${element.name}${index}`}\n                    render={(props) => {\n                      return <UserPanel name={element} {...props} />;\n                    }} */}\n                  {/* /> */}\n                  <StyledButton\n                    onClick={() =>\n                      history.push(`/user/${element.username}/${element.id}`)\n                    }\n                  >\n                    Edytuj\n                  </StyledButton>\n                </td>\n\n                 \n\n              </StyledTr>\n            ))}\n          </tbody>\n        </StyledTable>\n      </TableContainer>\n\n      <StyledButton onClick={() => fetchData()}>Refresh</StyledButton>\n    </>\n  );\n};\n\n\n async function fetchData() {\n  const data = await fetch(\"/api/selectUsers\", {\n    method: \"GET\",\n    headers: new Headers({ \"content-type\": \"application/json\" }),\n    mode: \"cors\",\n  }).catch((error) => console.log(error));\n  return data;\n}\n","/home/radek/Pulpit/Node-main/08 - server/client/src/Github.js",["52"],"/home/radek/Pulpit/Node-main/08 - server/client/src/index.js",[],"/home/radek/Pulpit/Node-main/08 - server/client/src/history.js",[],"/home/radek/Pulpit/Node-main/08 - server/client/src/App.js",["53","54"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport styled from \"styled-components\";\nimport { Home } from \"./Home\";\nimport { Github } from \"./Github\";\nimport { Fetch } from \"./Fetch\";\n\nimport { Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport history from './history';\nimport UserPanel from './UserPanel';\n\n\n//TODO: Add browser history dynamic routing\n\nconst StyledUl = styled.ul`\n  li {\n    list-style-type: none;\n    background-color: aliceblue;\n  }\n`;\n\nfunction App() {\n//  const history = useHistory();\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <div>\n          <nav>\n            <StyledUl>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n     \n            </StyledUl>\n          </nav>\n\n          <Switch>\n            <Route path=\"/about\"></Route>\n            <Route path=\"/users\"></Route>\n            <Route exact path=\"/github\"\n                   component={Github}></Route>\n            <Route exact path=\"/fetch\"\n                   component={Fetch}></Route>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path='/user/:name/:id' component={UserPanel}/>\n         \n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/radek/Pulpit/Node-main/08 - server/client/src/fetchData.js",[],{"ruleId":"55","severity":1,"message":"56","line":5,"column":10,"nodeType":"57","messageId":"58","endLine":5,"endColumn":14},{"ruleId":"55","severity":1,"message":"59","line":7,"column":32,"nodeType":"57","messageId":"58","endLine":7,"endColumn":43},{"ruleId":"55","severity":1,"message":"60","line":8,"column":30,"nodeType":"57","messageId":"58","endLine":8,"endColumn":41},{"ruleId":"55","severity":1,"message":"61","line":30,"column":7,"nodeType":"57","messageId":"58","endLine":30,"endColumn":19},{"ruleId":"55","severity":1,"message":"62","line":139,"column":7,"nodeType":"57","messageId":"58","endLine":139,"endColumn":18},{"ruleId":"55","severity":1,"message":"63","line":203,"column":10,"nodeType":"57","messageId":"58","endLine":203,"endColumn":18},{"ruleId":"55","severity":1,"message":"64","line":204,"column":10,"nodeType":"57","messageId":"58","endLine":204,"endColumn":17},{"ruleId":"55","severity":1,"message":"65","line":206,"column":11,"nodeType":"57","messageId":"58","endLine":206,"endColumn":15},{"ruleId":"66","severity":1,"message":"67","line":246,"column":9,"nodeType":"68","endLine":246,"endColumn":125},{"ruleId":"55","severity":1,"message":"69","line":7,"column":27,"nodeType":"57","messageId":"58","endLine":7,"endColumn":33},{"ruleId":"55","severity":1,"message":"70","line":7,"column":35,"nodeType":"57","messageId":"58","endLine":7,"endColumn":41},{"ruleId":"55","severity":1,"message":"56","line":7,"column":50,"nodeType":"57","messageId":"58","endLine":7,"endColumn":54},{"ruleId":"71","severity":1,"message":"72","line":4,"column":9,"nodeType":"73","endLine":4,"endColumn":31},{"ruleId":"55","severity":1,"message":"74","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"75","line":9,"column":39,"nodeType":"57","messageId":"58","endLine":9,"endColumn":49},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'AvatarImage' is defined but never used.","'RemoveImage' is defined but never used.","'StyledButton' is assigned a value but never used.","'ImageCenter' is assigned a value but never used.","'userData' is assigned a value but never used.","'loading' is assigned a value but never used.","'name' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Router' is defined but never used.","'Switch' is defined but never used.","react-hooks/exhaustive-deps","The 'header' object construction makes the dependencies of useEffect Hook (at line 17) change on every render. To fix this, wrap the initialization of 'header' in its own useMemo() Hook.","VariableDeclarator","'logo' is defined but never used.","'useHistory' is defined but never used."]